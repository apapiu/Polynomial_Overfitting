library(polynom)
library(manipulate)
#q is degree of polynomial, n is number of examples, s is sigma squared
overfit.plot <- function(q,n,s) {
#set.seed(127)
x <- runif(n, min = -1, max = 1)
epsi <- rnorm(n) #noise
poly <- polynomial(rnorm(n = q+1)) #poly
y <- predict(poly, x) + sqrt(s)*epsi #values of poly +noise
df <- data.frame(x, y)
model_2 <- lm(y ~ poly(x,2), data = df)
model_10 <- lm(y ~ poly(x, 10), data = df)
test <- runif(2000, min = -1, max = 1)
testdf <- data.frame(test)
colnames(testdf)[1]<-"x"
newy_2 <- predict(model_2, newdata = testdf)
newy_10 <- predict(model_10, newdata = testdf)
plot(test, predict(poly,test), ylim = c(-3,3), xlab = "x", ylab = "y", pch = 20 )
points(test, newy_10, col = "red", pch = 20)
points(test, newy_2, col = "green", pch = 20)
points(x, y, col = "dark blue")
}
manipulate(overfit.plot(q, n, s),
q = slider(min = 1, max = 20),
n = slider(min = 20, max = 200),
s = slider(min = .01, max = 2))
manipulate(overfit.plot(q, n, s),
q = slider(min = 1, max = 20),
n = slider(min = 20, max = 200),
s = slider(min = .01, max = 2))
